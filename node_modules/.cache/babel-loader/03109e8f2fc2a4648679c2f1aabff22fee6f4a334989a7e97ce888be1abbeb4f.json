{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hhsiana\\\\Desktop\\\\EFM_React\\\\Preje2\\\\my-efm\\\\src\\\\Ex1\\\\TestApi.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Api() {\n  _s();\n  const [cours, setcours] = useState([]);\n  const [id, setid] = useState('');\n  useEffect(() => {\n    axios.get('https://jsonplaceholder.typicode.com/comments?postId=1').then(response => setcours(response.data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Rechercher\",\n      onChange: e => setid(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), cours.filter(c => c.id.toString() === id) // Ensure ID comparison is between strings\n    .map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: c.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: c.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: c.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: c.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this)]\n    }, c.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true);\n}\n_s(Api, \"brJu6KxHKbElERjDNv3oebqn2gM=\");\n_c = Api;\nvar _c;\n$RefreshReg$(_c, \"Api\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Api","_s","cours","setcours","id","setid","get","then","response","data","catch","error","console","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","filter","c","toString","map","i","name","email","body","_c","$RefreshReg$"],"sources":["C:/Users/hhsiana/Desktop/EFM_React/Preje2/my-efm/src/Ex1/TestApi.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function Api() {\r\n    const [cours, setcours] = useState([]);\r\n    const [id, setid] = useState('');\r\n\r\n    useEffect(() => {\r\n        axios.get('https://jsonplaceholder.typicode.com/comments?postId=1')\r\n            .then((response) => setcours(response.data))\r\n            .catch((error) => console.error('Error fetching data:', error));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Rechercher\"\r\n                onChange={(e) => setid(e.target.value)}\r\n            />\r\n\r\n            {cours\r\n                .filter((c) => c.id.toString() === id) // Ensure ID comparison is between strings\r\n                .map((c, i) => (\r\n                    <div key={c.id}> {/* Use `c.id` as a key instead of index */}\r\n                        <p>{c.id}</p>\r\n                        <p>{c.name}</p>\r\n                        <p>{c.email}</p>\r\n                        <p>{c.body}</p>\r\n                    </div>\r\n                ))}\r\n        </>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,EAAE,EAAEC,KAAK,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACZE,KAAK,CAACW,GAAG,CAAC,wDAAwD,CAAC,CAC9DC,IAAI,CAAEC,QAAQ,IAAKL,QAAQ,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC3CC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACId,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACIhB,OAAA;MACIiB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBC,QAAQ,EAAGC,CAAC,IAAKZ,KAAK,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,EAEDrB,KAAK,CACDsB,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACrB,EAAE,CAACsB,QAAQ,CAAC,CAAC,KAAKtB,EAAE,CAAC,CAAC;IAAA,CACtCuB,GAAG,CAAC,CAACF,CAAC,EAAEG,CAAC,kBACN/B,OAAA;MAAAgB,QAAA,GAAgB,GAAC,eACbhB,OAAA;QAAAgB,QAAA,EAAIY,CAAC,CAACrB;MAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACb1B,OAAA;QAAAgB,QAAA,EAAIY,CAAC,CAACI;MAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACf1B,OAAA;QAAAgB,QAAA,EAAIY,CAAC,CAACK;MAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChB1B,OAAA;QAAAgB,QAAA,EAAIY,CAAC,CAACM;MAAI;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAJTE,CAAC,CAACrB,EAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKT,CACR,CAAC;EAAA,eACR,CAAC;AAEX;AAACtB,EAAA,CA9BuBD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}